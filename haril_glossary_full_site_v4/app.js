/* app (v4) minimal includes full feature set) */
const PALETTES=[["hsl(240 28% 6%)","hsl(35 12% 95%)","hsl(265 85% 72%)","hsl(200 90% 70%)","hsl(240 8% 50%)","hsl(265 90% 65% / 0.25)"],["hsl(210 25% 6%)","hsl(20 14% 94%)","hsl(195 85% 70%)","hsl(160 80% 72%)","hsl(210 8% 52%)","hsl(195 90% 65% / 0.25)"],["hsl(260 28% 6%)","hsl(40 12% 96%)","hsl(300 80% 72%)","hsl(260 90% 70%)","hsl(260 8% 52%)","hsl(300 90% 65% / 0.25)"],["hsl(230 28% 6%)","hsl(45 12% 95%)","hsl(45 90% 68%)","hsl(15 80% 70%)","hsl(230 8% 52%)","hsl(45 90% 55% / 0.25)"]];
let paletteIndex=0;function applyPalette(i){const [bg,fg,a1,a2,mut,ring]=PALETTES[i%PALETTES.length];const r=document.documentElement.style;r.setProperty('--bg',bg);r.setProperty('--fg',fg);r.setProperty('--accent',a1);r.setProperty('--accent2',a2);r.setProperty('--muted',mut);r.setProperty('--ring',ring);}applyPalette(paletteIndex);document.getElementById('paletteBtn').addEventListener('click',()=>{paletteIndex=(paletteIndex+1)%PALETTES.length;applyPalette(paletteIndex)});
const sky=document.getElementById('sky');const sctx=sky.getContext('2d');let SW=0,SH=0,SDPR=Math.min(devicePixelRatio||1,2);function fitSky(){SW=sky.width=Math.floor(innerWidth*SDPR);SH=sky.height=Math.floor(innerHeight*SDPR);sky.style.width=innerWidth+'px';sky.style.height=innerHeight+'px';drawStars()}const STARS=[];function seedStars(){STARS.length=0;const c=Math.floor((innerWidth*innerHeight)/9000);for(let i=0;i<c;i++){STARS.push({x:Math.random()*SW,y:Math.random()*SH,r:Math.random()*1.2+.2,a:Math.random()*Math.PI*2,tw:Math.random()*.8+.2})}}function drawStars(){sctx.clearRect(0,0,SW,SH);sctx.fillStyle='white';for(const s of STARS){const tw=0.85+0.15*Math.sin(s.a+=s.tw*0.03);sctx.globalAlpha=0.5+0.5*tw;sctx.beginPath();sctx.arc(s.x,s.y,s.r*SDPR,0,Math.PI*2);sctx.fill()}sctx.globalAlpha=1}fitSky();seedStars();drawStars();addEventListener('resize',()=>{fitSky();seedStars();drawStars()});
const cvs=document.getElementById('spiral');const ctx=cvs.getContext('2d');let W=0,H=0,DPR=Math.min(devicePixelRatio||1,2),CX=0,CY=0;function fit(){W=cvs.width=Math.floor(innerWidth*DPR);H=cvs.height=Math.floor(innerHeight*DPR);cvs.style.width=innerWidth+'px';cvs.style.height=innerHeight+'px';CX=W/2;CY=H/2}fit();addEventListener('resize',fit);let mouse={x:0,y:0};addEventListener('mousemove',e=>{mouse.x=(e.clientX/innerWidth-0.5)*2;mouse.y=(e.clientY/innerHeight-0.5)*2},{passive:true});let a=2,b=0.15,thetaStep=0.18;const MAX_POINTS=800;function draw(now){drawStars();ctx.clearRect(0,0,W,H);const wob=30*DPR;const cX=CX+wob*mouse.x;const cY=CY+wob*mouse.y;ctx.lineWidth=Math.max(1,DPR*0.7);ctx.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue('--ring');ctx.beginPath();let theta=0;let first=true;const spin=now*0.00012;while(theta<26){const rad=a*Math.exp(b*theta)*3.5*DPR;const x=cX+Math.cos(theta+spin)*rad;const y=cY+Math.sin(theta+spin)*rad;if(first){ctx.moveTo(x,y);first=false}else{ctx.lineTo(x,y)}theta+=0.08}ctx.stroke();const accent=getComputedStyle(document.documentElement).getPropertyValue('--accent');const accent2=getComputedStyle(document.documentElement).getPropertyValue('--accent2');theta=0;let i=0;while(i<MAX_POINTS){const rad=a*Math.exp(b*theta)*3.5*DPR;const x=cX+Math.cos(theta+spin)*rad;const y=cY+Math.sin(theta+spin)*rad;if(!(x<-50||x>W+50||y<-50||y>H+50)){ctx.beginPath();ctx.fillStyle=(i%2)?accent:accent2;const size=0.5+1.2*Math.pow(i/MAX_POINTS,0.45);ctx.globalAlpha=0.4+0.4*Math.sin(now*0.003+i);ctx.arc(x,y,size*DPR,0,Math.PI*2);ctx.fill();ctx.globalAlpha=1}theta+=thetaStep;i++}requestAnimationFrame(draw)}if(!matchMedia('(prefers-reduced-motion: reduce)').matches){requestAnimationFrame(draw)}
let TERMS=[];const gridEl=document.getElementById('cardGrid');const detailView=document.getElementById('detailView');const termContent=document.getElementById('termContent');
function renderGrid(filter){gridEl.innerHTML='';const list=filter?TERMS.filter(t=>(t.tags||[]).includes(filter)):TERMS;list.forEach(t=>{const c=document.createElement('article');c.className='card';c.role='listitem';c.tabIndex=0;c.dataset.slug=t.slug;const tags=(t.tags||[]).map(tag=>`<a class="tag" href="#/theme/${encodeURIComponent(tag)}">${tag}</a>`).join('');c.innerHTML=`<h2 class="card-title">${t.title}</h2><p class="card-sub">${t.subtitle||''}</p><div class="taglist">${tags}</div>`;c.addEventListener('click',e=>{if(e.target&&e.target.classList&&e.target.classList.contains('tag'))return;location.hash=`#/term/${t.slug}`});c.addEventListener('keypress',e=>{if(e.key==='Enter')location.hash=`#/term/${t.slug}`});gridEl.appendChild(c)})}
function showGrid(){detailView.hidden=true;document.body.classList.remove('has-detail')}
function showDetail(slug){detailView.hidden=false;document.body.classList.add('has-detail');termContent.innerHTML='<p style="opacity:.7">Loading…</p>';fetch(`terms/${slug}.html`,{cache:'no-store'}).then(r=>r.ok?r.text():Promise.reject()).then(html=>{const term=TERMS.find(t=>t.slug===slug)||{tags:[]};const tagPills=(term.tags||[]).map(t=>`<a class="tag" href="#/theme/${encodeURIComponent(t)}">${t}</a>`).join('');const tagsBlock=term.tags?.length?`<div class="taglist" style="margin-top:10px">${tagPills}</div>`:'';termContent.innerHTML=html+tagsBlock}).catch(()=>{termContent.innerHTML=`<h2>${slug}</h2><p>Content not found. Create <code>terms/${slug}.html</code>.</p>`})}
function renderThemeBar(tag){const id='themeBar';let bar=document.getElementById(id);if(!tag){if(bar)bar.remove();return}if(!bar){bar=document.createElement('div');bar.id=id;bar.className='theme-bar';document.querySelector('#app')?.prepend(bar)}const label=({recursive:'Recursive / Process',telemetry:'Telemetry / Diagnostics',agency:'Agency & Drift',identity:'Identity & Cognition'})[tag]||tag;bar.innerHTML=`<div class="theme-chip">${label} <span class="x" title="Clear" onclick="location.hash='#/'">×</span></div>`}
function renderThemesIndex(){const CLUSTERS=['recursive','telemetry','agency','identity'];gridEl.innerHTML='';const wrap=document.createElement('div');wrap.style.maxWidth='900px';wrap.style.width='100%';wrap.style.padding='16px';const h=document.createElement('h2');h.textContent='Themes';h.style.textAlign='center';wrap.appendChild(h);const list=document.createElement('div');list.className='taglist';list.style.justifyContent='center';const counts=Object.fromEntries(CLUSTERS.map(c=>[c,0]));TERMS.forEach(t=>(t.tags||[]).forEach(tag=>{if(counts[tag]!==undefined)counts[tag]++}));CLUSTERS.forEach(tag=>{const label=({recursive:'Recursive / Process',telemetry:'Telemetry / Diagnostics',agency:'Agency & Drift',identity:'Identity & Cognition'})[tag]||tag;const a=document.createElement('a');a.className='tag';a.href=`#/theme/${encodeURIComponent(tag)}`;a.textContent=`${label} (${counts[tag]||0})`;list.appendChild(a)});wrap.appendChild(list);gridEl.appendChild(wrap)}
function route(hash){const mTheme=hash.match(/^#\/theme\/([^\/]+)/);const mTerm=hash.match(/^#\/term\/([\w\-]+)/);if(mTheme){const tag=decodeURIComponent(mTheme[1]);renderThemeBar(tag);showGrid();renderGrid(tag);return}renderThemeBar(null);if(mTerm){showDetail(mTerm[1]);return}if(hash==='#/themes'){showGrid();renderThemesIndex();return}showGrid();renderGrid(null)}
fetch('terms.json',{cache:'no-store'}).then(r=>r.json()).then(data=>{TERMS=data;route(location.hash||'#/')});addEventListener('hashchange',()=>route(location.hash));
